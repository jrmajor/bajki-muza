CREATE TABLE `migrations` (`id` integer primary key auto_increment not null, `migration` varchar not null, `batch` integer not null);
CREATE TABLE `users` (`id` integer primary key auto_increment not null, `username` varchar not null, `password` varchar not null, `remember_token` varchar);
CREATE TABLE `telescope_entries` (`sequence` integer primary key auto_increment not null, `uuid` varchar not null, `batch_id` varchar not null, `family_hash` varchar, `should_display_on_index` tinyint(1) not null default '1', `type` varchar not null, `content` text not null, `created_at` datetime);
CREATE TABLE `telescope_entries_tags` (`entry_uuid` varchar not null, `tag` varchar not null, foreign key(`entry_uuid`) references `telescope_entries`(`uuid`) on delete cascade, primary key (`entry_uuid`, `tag`));
CREATE TABLE `telescope_monitoring` (`tag` varchar not null, primary key (`tag`));
CREATE TABLE `tales_actors` (`id` integer primary key auto_increment not null, `artist_id` integer not null, `tale_id` integer not null, `characters` varchar, `credit_nr` integer, `created_at` datetime, `updated_at` datetime, foreign key(`artist_id`) references `artists`(`id`) on delete restrict, foreign key(`tale_id`) references `tales`(`id`) on delete restrict);
CREATE TABLE `failed_jobs` (`id` integer primary key auto_increment not null, `connection` text not null, `queue` text not null, `payload` text not null, `exception` text not null, `failed_at` datetime not null default CURRENT_TIMESTAMP);
CREATE TABLE `credits` (`id` integer primary key auto_increment not null, `tale_id` integer not null, `artist_id` integer not null, `type` varchar not null, `as` varchar, `nr` integer not null, `created_at` datetime, `updated_at` datetime, foreign key(`tale_id`) references `tales`(`id`) on delete restrict, foreign key(`artist_id`) references `artists`(`id`) on delete restrict);
CREATE TABLE `covers` (`filename` varchar not null, `placeholder` blob, `created_at` datetime, `updated_at` datetime, primary key (`filename`));
CREATE TABLE `photos` (`filename` varchar not null, `source` varchar, `width` integer, `height` integer, `crop` text not null, `placeholder` blob, `face_placeholder` blob, `created_at` datetime, `updated_at` datetime, `grayscale` tinyint(1) not null default '0', primary key (`filename`));
CREATE TABLE tales (id INTEGER PRIMARY KEY auto_increment NOT NULL, slug VARCHAR(255) NOT NULL, title VARCHAR(255) NOT NULL, year INTEGER DEFAULT NULL, nr VARCHAR(255) DEFAULT NULL, cover_filename VARCHAR(255) DEFAULT NULL, notes TEXT DEFAULT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, `discogs` integer);
CREATE TABLE artists (id INTEGER PRIMARY KEY auto_increment NOT NULL, slug VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, genetivus VARCHAR(255) DEFAULT NULL, discogs INTEGER DEFAULT NULL, filmpolski INTEGER DEFAULT NULL, wikipedia VARCHAR(255) DEFAULT NULL, photo_filename VARCHAR(255) DEFAULT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL);
CREATE TABLE `monitored_scheduled_tasks` (`id` integer primary key auto_increment not null, `name` varchar not null, `type` varchar, `cron_expression` varchar not null, `timezone` varchar, `ping_url` varchar, `last_started_at` datetime, `last_finished_at` datetime, `last_failed_at` datetime, `last_skipped_at` datetime, `registered_on_oh_dear_at` datetime, `last_pinged_at` datetime, `grace_time_in_minutes` integer not null, `created_at` datetime, `updated_at` datetime);
CREATE TABLE `monitored_scheduled_task_log_items` (`id` integer primary key auto_increment not null, `monitored_scheduled_task_id` integer not null, `type` varchar not null, `meta` text, `created_at` datetime, `updated_at` datetime, foreign key(`monitored_scheduled_task_id`) references `monitored_scheduled_tasks`(`id`) on delete cascade);
